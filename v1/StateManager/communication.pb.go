// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.11.4
// source: communication.proto

package v1_proto_statemanager

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Type int32

const (
	Type_WORKER    Type = 0
	Type_CLIENT    Type = 1
	Type_TELEMETRY Type = 2
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0: "WORKER",
		1: "CLIENT",
		2: "TELEMETRY",
	}
	Type_value = map[string]int32{
		"WORKER":    0,
		"CLIENT":    1,
		"TELEMETRY": 2,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_communication_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_communication_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{0}
}

type GenericResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool   `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
	Error      string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GenericResponse) Reset() {
	*x = GenericResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericResponse) ProtoMessage() {}

func (x *GenericResponse) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericResponse.ProtoReflect.Descriptor instead.
func (*GenericResponse) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{0}
}

func (x *GenericResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

func (x *GenericResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type EntityEditRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId string       `protobuf:"bytes,1,opt,name=EntityId,proto3" json:"EntityId,omitempty"`
	Token    string       `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty"`
	State    *EntityState `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *EntityEditRequest) Reset() {
	*x = EntityEditRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityEditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityEditRequest) ProtoMessage() {}

func (x *EntityEditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityEditRequest.ProtoReflect.Descriptor instead.
func (*EntityEditRequest) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{1}
}

func (x *EntityEditRequest) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *EntityEditRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *EntityEditRequest) GetState() *EntityState {
	if x != nil {
		return x.State
	}
	return nil
}

type EntityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId string `protobuf:"bytes,1,opt,name=EntityId,proto3" json:"EntityId,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty"`
}

func (x *EntityRequest) Reset() {
	*x = EntityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityRequest) ProtoMessage() {}

func (x *EntityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityRequest.ProtoReflect.Descriptor instead.
func (*EntityRequest) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{2}
}

func (x *EntityRequest) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *EntityRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	Type  Type   `protobuf:"varint,2,opt,name=type,proto3,enum=v1.proto.statemanager.Type" json:"type,omitempty"`
}

func (x *ConnectionRequest) Reset() {
	*x = ConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionRequest) ProtoMessage() {}

func (x *ConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionRequest.ProtoReflect.Descriptor instead.
func (*ConnectionRequest) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{3}
}

func (x *ConnectionRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ConnectionRequest) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_WORKER
}

type InitialConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type Type `protobuf:"varint,2,opt,name=type,proto3,enum=v1.proto.statemanager.Type" json:"type,omitempty"`
}

func (x *InitialConnectionRequest) Reset() {
	*x = InitialConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitialConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitialConnectionRequest) ProtoMessage() {}

func (x *InitialConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitialConnectionRequest.ProtoReflect.Descriptor instead.
func (*InitialConnectionRequest) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{4}
}

func (x *InitialConnectionRequest) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_WORKER
}

type AuthorityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthoritativeMember string `protobuf:"bytes,1,opt,name=AuthoritativeMember,proto3" json:"AuthoritativeMember,omitempty"`
}

func (x *AuthorityResponse) Reset() {
	*x = AuthorityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorityResponse) ProtoMessage() {}

func (x *AuthorityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorityResponse.ProtoReflect.Descriptor instead.
func (*AuthorityResponse) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{5}
}

func (x *AuthorityResponse) GetAuthoritativeMember() string {
	if x != nil {
		return x.AuthoritativeMember
	}
	return ""
}

type EntityState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string    `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	PrefabName string    `protobuf:"bytes,2,opt,name=PrefabName,proto3" json:"PrefabName,omitempty"`
	Members    []*Member `protobuf:"bytes,3,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *EntityState) Reset() {
	*x = EntityState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityState) ProtoMessage() {}

func (x *EntityState) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityState.ProtoReflect.Descriptor instead.
func (*EntityState) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{6}
}

func (x *EntityState) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EntityState) GetPrefabName() string {
	if x != nil {
		return x.PrefabName
	}
	return ""
}

func (x *EntityState) GetMembers() []*Member {
	if x != nil {
		return x.Members
	}
	return nil
}

type Member struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberName          string `protobuf:"bytes,1,opt,name=MemberName,proto3" json:"MemberName,omitempty"`
	MemberType          string `protobuf:"bytes,2,opt,name=MemberType,proto3" json:"MemberType,omitempty"`
	Data                string `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	AuthoritativeMember string `protobuf:"bytes,4,opt,name=AuthoritativeMember,proto3" json:"AuthoritativeMember,omitempty"`
}

func (x *Member) Reset() {
	*x = Member{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member) ProtoMessage() {}

func (x *Member) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Member.ProtoReflect.Descriptor instead.
func (*Member) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{7}
}

func (x *Member) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *Member) GetMemberType() string {
	if x != nil {
		return x.MemberType
	}
	return ""
}

func (x *Member) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *Member) GetAuthoritativeMember() string {
	if x != nil {
		return x.AuthoritativeMember
	}
	return ""
}

type PackedState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State []*EntityState `protobuf:"bytes,1,rep,name=state,proto3" json:"state,omitempty"`
}

func (x *PackedState) Reset() {
	*x = PackedState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackedState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackedState) ProtoMessage() {}

func (x *PackedState) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackedState.ProtoReflect.Descriptor instead.
func (*PackedState) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{8}
}

func (x *PackedState) GetState() []*EntityState {
	if x != nil {
		return x.State
	}
	return nil
}

var File_communication_proto protoreflect.FileDescriptor

var file_communication_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x22, 0x47, 0x0a, 0x0f,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x7f, 0x0a, 0x11, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x45,
	0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x38, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x76, 0x31,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x41, 0x0a, 0x0d, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5a, 0x0a, 0x11, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4b, 0x0a, 0x18, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x45, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x76, 0x0a, 0x0b, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x65, 0x66,
	0x61, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72,
	0x65, 0x66, 0x61, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x22, 0x8e, 0x01, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x30, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x22, 0x47, 0x0a, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2a, 0x2d, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x4f, 0x52, 0x4b, 0x45, 0x52, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x54,
	0x45, 0x4c, 0x45, 0x4d, 0x45, 0x54, 0x52, 0x59, 0x10, 0x02, 0x32, 0x86, 0x07, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x66, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12,
	0x2f, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x08,
	0x46, 0x75, 0x6c, 0x6c, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x28, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x28, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x28, 0x2e, 0x76,
	0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x45, 0x64, 0x69, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5e, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x24, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x65, 0x0a, 0x11, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x24, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x76, 0x31,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0d, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x12, 0x28, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x6c, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x28, 0x2e, 0x76, 0x31,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x00, 0x30, 0x01, 0x42, 0x26, 0xaa, 0x02, 0x23, 0x6d, 0x65, 0x2e, 0x6a, 0x6f, 0x72, 0x64, 0x61,
	0x6e, 0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_communication_proto_rawDescOnce sync.Once
	file_communication_proto_rawDescData = file_communication_proto_rawDesc
)

func file_communication_proto_rawDescGZIP() []byte {
	file_communication_proto_rawDescOnce.Do(func() {
		file_communication_proto_rawDescData = protoimpl.X.CompressGZIP(file_communication_proto_rawDescData)
	})
	return file_communication_proto_rawDescData
}

var file_communication_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_communication_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_communication_proto_goTypes = []interface{}{
	(Type)(0),                        // 0: v1.proto.statemanager.Type
	(*GenericResponse)(nil),          // 1: v1.proto.statemanager.GenericResponse
	(*EntityEditRequest)(nil),        // 2: v1.proto.statemanager.EntityEditRequest
	(*EntityRequest)(nil),            // 3: v1.proto.statemanager.EntityRequest
	(*ConnectionRequest)(nil),        // 4: v1.proto.statemanager.ConnectionRequest
	(*InitialConnectionRequest)(nil), // 5: v1.proto.statemanager.InitialConnectionRequest
	(*AuthorityResponse)(nil),        // 6: v1.proto.statemanager.AuthorityResponse
	(*EntityState)(nil),              // 7: v1.proto.statemanager.EntityState
	(*Member)(nil),                   // 8: v1.proto.statemanager.Member
	(*PackedState)(nil),              // 9: v1.proto.statemanager.PackedState
}
var file_communication_proto_depIdxs = []int32{
	7,  // 0: v1.proto.statemanager.EntityEditRequest.state:type_name -> v1.proto.statemanager.EntityState
	0,  // 1: v1.proto.statemanager.ConnectionRequest.type:type_name -> v1.proto.statemanager.Type
	0,  // 2: v1.proto.statemanager.InitialConnectionRequest.type:type_name -> v1.proto.statemanager.Type
	8,  // 3: v1.proto.statemanager.EntityState.members:type_name -> v1.proto.statemanager.Member
	7,  // 4: v1.proto.statemanager.PackedState.state:type_name -> v1.proto.statemanager.EntityState
	5,  // 5: v1.proto.statemanager.State.Connect:input_type -> v1.proto.statemanager.InitialConnectionRequest
	4,  // 6: v1.proto.statemanager.State.FullLoad:input_type -> v1.proto.statemanager.ConnectionRequest
	2,  // 7: v1.proto.statemanager.State.UpdateObject:input_type -> v1.proto.statemanager.EntityEditRequest
	2,  // 8: v1.proto.statemanager.State.CreateObject:input_type -> v1.proto.statemanager.EntityEditRequest
	3,  // 9: v1.proto.statemanager.State.RemoveObject:input_type -> v1.proto.statemanager.EntityRequest
	3,  // 10: v1.proto.statemanager.State.RetrieveAuthority:input_type -> v1.proto.statemanager.EntityRequest
	3,  // 11: v1.proto.statemanager.State.RetrieveState:input_type -> v1.proto.statemanager.EntityRequest
	4,  // 12: v1.proto.statemanager.State.StateStream:input_type -> v1.proto.statemanager.ConnectionRequest
	4,  // 13: v1.proto.statemanager.State.SubscriptionStream:input_type -> v1.proto.statemanager.ConnectionRequest
	4,  // 14: v1.proto.statemanager.State.Connect:output_type -> v1.proto.statemanager.ConnectionRequest
	9,  // 15: v1.proto.statemanager.State.FullLoad:output_type -> v1.proto.statemanager.PackedState
	1,  // 16: v1.proto.statemanager.State.UpdateObject:output_type -> v1.proto.statemanager.GenericResponse
	1,  // 17: v1.proto.statemanager.State.CreateObject:output_type -> v1.proto.statemanager.GenericResponse
	1,  // 18: v1.proto.statemanager.State.RemoveObject:output_type -> v1.proto.statemanager.GenericResponse
	6,  // 19: v1.proto.statemanager.State.RetrieveAuthority:output_type -> v1.proto.statemanager.AuthorityResponse
	7,  // 20: v1.proto.statemanager.State.RetrieveState:output_type -> v1.proto.statemanager.EntityState
	7,  // 21: v1.proto.statemanager.State.StateStream:output_type -> v1.proto.statemanager.EntityState
	4,  // 22: v1.proto.statemanager.State.SubscriptionStream:output_type -> v1.proto.statemanager.ConnectionRequest
	14, // [14:23] is the sub-list for method output_type
	5,  // [5:14] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_communication_proto_init() }
func file_communication_proto_init() {
	if File_communication_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_communication_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityEditRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitialConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Member); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackedState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_communication_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_communication_proto_goTypes,
		DependencyIndexes: file_communication_proto_depIdxs,
		EnumInfos:         file_communication_proto_enumTypes,
		MessageInfos:      file_communication_proto_msgTypes,
	}.Build()
	File_communication_proto = out.File
	file_communication_proto_rawDesc = nil
	file_communication_proto_goTypes = nil
	file_communication_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StateClient is the client API for State service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StateClient interface {
	Connect(ctx context.Context, in *InitialConnectionRequest, opts ...grpc.CallOption) (*ConnectionRequest, error)
	FullLoad(ctx context.Context, in *ConnectionRequest, opts ...grpc.CallOption) (*PackedState, error)
	UpdateObject(ctx context.Context, in *EntityEditRequest, opts ...grpc.CallOption) (*GenericResponse, error)
	CreateObject(ctx context.Context, in *EntityEditRequest, opts ...grpc.CallOption) (*GenericResponse, error)
	RemoveObject(ctx context.Context, in *EntityRequest, opts ...grpc.CallOption) (*GenericResponse, error)
	RetrieveAuthority(ctx context.Context, in *EntityRequest, opts ...grpc.CallOption) (*AuthorityResponse, error)
	RetrieveState(ctx context.Context, in *EntityRequest, opts ...grpc.CallOption) (*EntityState, error)
	StateStream(ctx context.Context, in *ConnectionRequest, opts ...grpc.CallOption) (State_StateStreamClient, error)
	SubscriptionStream(ctx context.Context, in *ConnectionRequest, opts ...grpc.CallOption) (State_SubscriptionStreamClient, error)
}

type stateClient struct {
	cc grpc.ClientConnInterface
}

func NewStateClient(cc grpc.ClientConnInterface) StateClient {
	return &stateClient{cc}
}

func (c *stateClient) Connect(ctx context.Context, in *InitialConnectionRequest, opts ...grpc.CallOption) (*ConnectionRequest, error) {
	out := new(ConnectionRequest)
	err := c.cc.Invoke(ctx, "/v1.proto.statemanager.State/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stateClient) FullLoad(ctx context.Context, in *ConnectionRequest, opts ...grpc.CallOption) (*PackedState, error) {
	out := new(PackedState)
	err := c.cc.Invoke(ctx, "/v1.proto.statemanager.State/FullLoad", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stateClient) UpdateObject(ctx context.Context, in *EntityEditRequest, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/v1.proto.statemanager.State/UpdateObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stateClient) CreateObject(ctx context.Context, in *EntityEditRequest, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/v1.proto.statemanager.State/CreateObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stateClient) RemoveObject(ctx context.Context, in *EntityRequest, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/v1.proto.statemanager.State/RemoveObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stateClient) RetrieveAuthority(ctx context.Context, in *EntityRequest, opts ...grpc.CallOption) (*AuthorityResponse, error) {
	out := new(AuthorityResponse)
	err := c.cc.Invoke(ctx, "/v1.proto.statemanager.State/RetrieveAuthority", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stateClient) RetrieveState(ctx context.Context, in *EntityRequest, opts ...grpc.CallOption) (*EntityState, error) {
	out := new(EntityState)
	err := c.cc.Invoke(ctx, "/v1.proto.statemanager.State/RetrieveState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stateClient) StateStream(ctx context.Context, in *ConnectionRequest, opts ...grpc.CallOption) (State_StateStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_State_serviceDesc.Streams[0], "/v1.proto.statemanager.State/StateStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &stateStateStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type State_StateStreamClient interface {
	Recv() (*EntityState, error)
	grpc.ClientStream
}

type stateStateStreamClient struct {
	grpc.ClientStream
}

func (x *stateStateStreamClient) Recv() (*EntityState, error) {
	m := new(EntityState)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *stateClient) SubscriptionStream(ctx context.Context, in *ConnectionRequest, opts ...grpc.CallOption) (State_SubscriptionStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_State_serviceDesc.Streams[1], "/v1.proto.statemanager.State/SubscriptionStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &stateSubscriptionStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type State_SubscriptionStreamClient interface {
	Recv() (*ConnectionRequest, error)
	grpc.ClientStream
}

type stateSubscriptionStreamClient struct {
	grpc.ClientStream
}

func (x *stateSubscriptionStreamClient) Recv() (*ConnectionRequest, error) {
	m := new(ConnectionRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// StateServer is the server API for State service.
type StateServer interface {
	Connect(context.Context, *InitialConnectionRequest) (*ConnectionRequest, error)
	FullLoad(context.Context, *ConnectionRequest) (*PackedState, error)
	UpdateObject(context.Context, *EntityEditRequest) (*GenericResponse, error)
	CreateObject(context.Context, *EntityEditRequest) (*GenericResponse, error)
	RemoveObject(context.Context, *EntityRequest) (*GenericResponse, error)
	RetrieveAuthority(context.Context, *EntityRequest) (*AuthorityResponse, error)
	RetrieveState(context.Context, *EntityRequest) (*EntityState, error)
	StateStream(*ConnectionRequest, State_StateStreamServer) error
	SubscriptionStream(*ConnectionRequest, State_SubscriptionStreamServer) error
}

// UnimplementedStateServer can be embedded to have forward compatible implementations.
type UnimplementedStateServer struct {
}

func (*UnimplementedStateServer) Connect(context.Context, *InitialConnectionRequest) (*ConnectionRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedStateServer) FullLoad(context.Context, *ConnectionRequest) (*PackedState, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FullLoad not implemented")
}
func (*UnimplementedStateServer) UpdateObject(context.Context, *EntityEditRequest) (*GenericResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateObject not implemented")
}
func (*UnimplementedStateServer) CreateObject(context.Context, *EntityEditRequest) (*GenericResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateObject not implemented")
}
func (*UnimplementedStateServer) RemoveObject(context.Context, *EntityRequest) (*GenericResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveObject not implemented")
}
func (*UnimplementedStateServer) RetrieveAuthority(context.Context, *EntityRequest) (*AuthorityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveAuthority not implemented")
}
func (*UnimplementedStateServer) RetrieveState(context.Context, *EntityRequest) (*EntityState, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveState not implemented")
}
func (*UnimplementedStateServer) StateStream(*ConnectionRequest, State_StateStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method StateStream not implemented")
}
func (*UnimplementedStateServer) SubscriptionStream(*ConnectionRequest, State_SubscriptionStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscriptionStream not implemented")
}

func RegisterStateServer(s *grpc.Server, srv StateServer) {
	s.RegisterService(&_State_serviceDesc, srv)
}

func _State_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitialConnectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StateServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.proto.statemanager.State/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StateServer).Connect(ctx, req.(*InitialConnectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _State_FullLoad_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StateServer).FullLoad(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.proto.statemanager.State/FullLoad",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StateServer).FullLoad(ctx, req.(*ConnectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _State_UpdateObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntityEditRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StateServer).UpdateObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.proto.statemanager.State/UpdateObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StateServer).UpdateObject(ctx, req.(*EntityEditRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _State_CreateObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntityEditRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StateServer).CreateObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.proto.statemanager.State/CreateObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StateServer).CreateObject(ctx, req.(*EntityEditRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _State_RemoveObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StateServer).RemoveObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.proto.statemanager.State/RemoveObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StateServer).RemoveObject(ctx, req.(*EntityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _State_RetrieveAuthority_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StateServer).RetrieveAuthority(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.proto.statemanager.State/RetrieveAuthority",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StateServer).RetrieveAuthority(ctx, req.(*EntityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _State_RetrieveState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StateServer).RetrieveState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.proto.statemanager.State/RetrieveState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StateServer).RetrieveState(ctx, req.(*EntityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _State_StateStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ConnectionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StateServer).StateStream(m, &stateStateStreamServer{stream})
}

type State_StateStreamServer interface {
	Send(*EntityState) error
	grpc.ServerStream
}

type stateStateStreamServer struct {
	grpc.ServerStream
}

func (x *stateStateStreamServer) Send(m *EntityState) error {
	return x.ServerStream.SendMsg(m)
}

func _State_SubscriptionStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ConnectionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StateServer).SubscriptionStream(m, &stateSubscriptionStreamServer{stream})
}

type State_SubscriptionStreamServer interface {
	Send(*ConnectionRequest) error
	grpc.ServerStream
}

type stateSubscriptionStreamServer struct {
	grpc.ServerStream
}

func (x *stateSubscriptionStreamServer) Send(m *ConnectionRequest) error {
	return x.ServerStream.SendMsg(m)
}

var _State_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.proto.statemanager.State",
	HandlerType: (*StateServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Connect",
			Handler:    _State_Connect_Handler,
		},
		{
			MethodName: "FullLoad",
			Handler:    _State_FullLoad_Handler,
		},
		{
			MethodName: "UpdateObject",
			Handler:    _State_UpdateObject_Handler,
		},
		{
			MethodName: "CreateObject",
			Handler:    _State_CreateObject_Handler,
		},
		{
			MethodName: "RemoveObject",
			Handler:    _State_RemoveObject_Handler,
		},
		{
			MethodName: "RetrieveAuthority",
			Handler:    _State_RetrieveAuthority_Handler,
		},
		{
			MethodName: "RetrieveState",
			Handler:    _State_RetrieveState_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StateStream",
			Handler:       _State_StateStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SubscriptionStream",
			Handler:       _State_SubscriptionStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "communication.proto",
}
